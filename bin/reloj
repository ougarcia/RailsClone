#!/usr/bin/env ruby

require 'reloj'

class TaskHandler

  def self.run_server
    require 'require_all'
    require_all "#{Dir.pwd}/app/**/*.rb"
    require_relative "#{Dir.pwd}/config/routes.rb"

    router = Reloj::Router.new
    router.draw(&App::ROUTES)

    server = WEBrick::HTTPServer.new(Port: ENV['PORT'] || 3000)
    server.mount_proc('/') { |req, res| router.run(req, res) }
    trap('INT') { server.shutdown }
    server.start
  end

  def self.generate_project(src, name)
    # copy skeleton
    copy_directory(src, name)

    # copy Rakefile and Gemfile
    copy_directory("common_files/.", name)

    # write db.yml
    config = { dbname: name }
    File.write(File.join(Dir.pwd, "#{name}/config/db.yml"), YAML.dump(config))
  end

  def self.copy_directory(src, dest)
    FileUtils.cp_r(File.join(skels_dir, src), "./#{dest}")
  end

  def self.skels_dir
    @skels_dir ||= File.expand_path(
      File.dirname(__FILE__) +
      '/../lib/reloj/skeletons'
    )
  end
end

case ARGV[0]
when "server"
  TaskHandler.run_server
when "new"
  name = ARGV[1].nil? ? "reloj_app" : ARGV[1]
  TaskHandler.generate_project('new_app', name)
when "db"
  case ARGV[1]
  when "create"
    Database.create
  when "delete"
    Database.delete
  when "setup"
    Database.setup
  when "reset"
    Database.reset
  end
when "generate:sample"
  TaskHandler.generate_project('sample_app', 'reloj_sample')
else
  puts "Invalid reloj command"
end
