#!/usr/bin/env ruby

require 'reloj'

def run_server
  require 'require_all'
  require_all "#{Dir.pwd}/app/**/*.rb"
  require_relative "#{Dir.pwd}/config/routes.rb"

  router = Reloj::Router.new
  router.draw(&App::ROUTES)

  server = WEBrick::HTTPServer.new(Port: 3000)
  server.mount_proc('/') { |req, res| router.run(req, res) }
  trap('INT') { server.shutdown }
  server.start
end

def generate_project(src, name)
  lib = File.expand_path(File.dirname(__FILE__) + '/../lib')
  src_dir = File.join(lib, "reloj/skeletons/#{src}")
  FileUtils.cp_r(src_dir, "./#{name}")
  common_dir = File.join(lin, "reloj/skeletons/common_files/.")
  FileUtils.cp_r(common_dir, "./#{name}")

  config = { dbname: name }
  File.write(File.join(Dir.pwd, "#{name}/config/db.yml"), YAML.dump(config))
end

case ARGV[0]
when "server"
  run_server
when "new"
  name = ARGV[1].nil? ? "reloj_app" : ARGV[1]
  generate_project('new_app', name)
when "db"
  case ARGV[1]
  when "create"
    Database.create
  when "delete"
    Database.delete
  when "setup"
    Database.setup
  when "reset"
    Database.reset
  end
when "generate:sample"
  generate_project('sample_app', 'reloj_sample')
else
  puts "Invalid reloj command"
end
